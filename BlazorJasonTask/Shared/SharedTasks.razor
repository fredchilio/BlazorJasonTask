<h1>@Titulo</h1>



<h1>Teste</h1>
@if (tasks == null)
{   
    
    <Alert>
        <Conteudo1>
            <img src="https://www.blogson.com.br/wp-content/uploads/2017/10/lg.walking-clock-preloader.gif"/>
            <h1> Aguardando...</h1>
        </Conteudo1>
        <Conteudo2>
            <h1> Carregando...</h1>
        </Conteudo2>
    </Alert>
    @*<p>Carregando...</p>*@
}
else if (!tasks.Any())
{
    @*<p>Ainda nao existe tarefa</p>*@
    <Alert>
        <Conteudo1>
            <img src="http://painelstream.net/img/404_icon.gif" />
            <h1>Nothing found</h1>
        </Conteudo1>
        <Conteudo2>
            <h1>Insert one or more Tasks</h1>
        </Conteudo2>

    </Alert>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Data</th>
                <th>Description</th>
                <th>Concluida</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in tasks)
            {
                <tr>
                    
                    <EachTask item="item" ToRemoveTask="DeleteTasks"/>
                </tr>
            }

        </tbody>
    </table>
}
@if (tasks != null)
{
    <div class="form-group">
        <label>Tasks</label>
        <input type="text" placeholder="type the new task" @bind="newTask" />
        <button class="btn btn-primary" @onclick="AddNewItem">Add New Item</button>
    </div>

}
@code
        {
    [Parameter] public List<Tasks> tasks { get; set; }
    [Parameter] public string Titulo { get; set; }



    private string newTask = "";

    

    void AddNewItem()
    {
        if (!string.IsNullOrWhiteSpace(newTask))
        {
            tasks.Add(new Tasks
            {
                DateCriateded = DateTime.Now,
                Description = newTask,
                ID = Guid.NewGuid()
            });
            newTask = "";
        }
    }
    void DeleteTasks(Tasks tasksID)
    {
        tasks.Remove(tasks.First(x => x.ID == tasksID.ID));
    }
}
